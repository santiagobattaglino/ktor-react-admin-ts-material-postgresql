{"version":3,"sources":["components/category/CatCreate.tsx","components/category/CatList.tsx","components/category/CatEdit.tsx","components/product/ProdCreate.tsx","components/product/ProdList.tsx","components/product/ProdEdit.tsx","components/user/UserCreate.tsx","components/user/UserList.tsx","components/user/UserEdit.tsx","components/color/ColorList.tsx","components/color/ColorCreate.tsx","components/color/ColorEdit.tsx","components/price/PriceCreate.tsx","components/price/PriceEdit.tsx","components/price/PriceList.tsx","components/stock/StockCreate.tsx","components/stock/StockEdit.tsx","components/stock/StockList.tsx","components/sale/SaleCreate.tsx","components/sale/AddProductsButton.js","components/sale/SaleEdit.tsx","components/sale/SaleList.tsx","components/saleproducts/SaleProductsCreate.tsx","components/saleproducts/SaleProductsEdit.tsx","components/saleproducts/SaleProductsList.tsx","components/option/OptionCreate.tsx","components/option/OptionEdit.tsx","components/option/OptionList.tsx","components/report/ReportList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CatCreate","props","Create","title","SimpleForm","redirect","TextInput","source","label","autoFocus","CatList","List","perPage","pagination","Datagrid","TextField","EditButton","basePath","undoable","DeleteButton","CatEdit","Edit","validateName","required","minLength","ProdCreate","email","translate","number","minValue","regex","choices","ReferenceInput","reference","SelectInput","optionText","validate","ProdFilter","Filter","alwaysOn","allowEmpty","ProdList","filters","sort","field","order","FunctionField","sortable","render","record","photoId","src","alt","name","ReferenceField","sortBy","Math","round","manufacturingCost","mlId","href","idMl","target","DateField","ProdEdit","UserCreate","AutocompleteInput","id","UserList","UserEdit","ColorList","ColorCreate","ColorEdit","PriceCreate","PriceEdit","PriceList","optionRenderer","choice","StockCreate","StockEdit","Filters","choises","StockList","SaleCreate","AddProductsButton","Button","variant","component","Link","to","SaleEdit","TabbedShowLayout","Tab","path","ReferenceManyField","addLabel","SaleList","productChoice","productRenderer","optionChoice","type","SaleProductsCreate","saleId_string","parse","location","search","saleId","parseInt","console","log","initialValues","fullWidth","SaleProductsEdit","SaleProductsList","OptionCreate","OptionEdit","OptionList","ReportList","App","apiUrl","process","undefined","Admin","dataProvider","simpleRestProvider","fetchUtils","fetchJson","Resource","options","list","create","edit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5353e200.chunk.js","sourcesContent":["import React from 'react'\nimport { Create, SimpleForm, TextInput } from 'react-admin'\n\nconst CatCreate = (props: any) => {\n    return (\n        <Create title='Nueva Categoría' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='name' label='Nombre' autoFocus />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default CatCreate","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst CatList = (props: any) => {\n    return (\n        <List title=\"Categorías\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='name' label='Nombre' />\n                <EditButton basePath='categories' undoable={false} />\n                <DeleteButton basePath='categories' undoable={false} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default CatList","import React from 'react'\nimport { Edit, SimpleForm, TextInput } from 'react-admin'\n\nconst CatEdit = (props: any) => {\n    return (\n        <Edit title='Editar Categoría' {...props}>\n            <SimpleForm>\n                <TextInput source='name' label='Nombre' autoFocus />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default CatEdit\n","import React from 'react'\nimport { required, minLength, email, minValue, regex, choices, number } from 'react-admin';\nimport { Create, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\n\n// https://marmelab.com/react-admin/CreateEdit.html#validation\nconst validateName = [required(), minLength(2)];\nconst emailMsg = ({ translate }) => translate('myroot.validation.email_invalid');\nconst validateEmail = email(emailMsg);\nconst validateAge = [number(), minValue(18)];\nconst validateZipCode = regex(/^\\d{5}$/, 'Must be a valid Zip Code');\nconst validateSex = choices(['m', 'f'], 'Must be Male or Female');\n\nconst ProdCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Producto' {...props}>\n            <SimpleForm redirect=\"list\">\n                <ReferenceInput label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\">\n                    <SelectInput optionText=\"name\" validate={validateName} />\n                </ReferenceInput>\n                <TextInput source='name' label='Nombre' validate={required()} autoFocus />\n                <TextInput source='manufacturingCost' validate={required()} label='Costo' />\n                <TextInput source='material' label='Material' />\n                <ReferenceInput label=\"Color/Estampa\" source=\"colorId\" reference=\"api/v1/colors\">\n                    <SelectInput optionText=\"name\" />\n                </ReferenceInput>\n                <TextInput source='idMl' label='idMl' />\n                <TextInput source='photoId' label='Foto' />\n                <TextInput source='notes' label='Notas' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default ProdCreate","import { useMediaQuery } from '@material-ui/core';\nimport React from 'react'\nimport {\n    Datagrid,\n    DeleteButton,\n    EditButton,\n    List,\n    TextField,\n    ReferenceField,\n    DateField,\n    FunctionField,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    Filter,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField\n} from 'react-admin'\n\nconst ProdFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\n        <ReferenceInput label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\" allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\nconst productRowStyle = (record: { nb_views: number; }, index: any) => ({\n    backgroundColor: record.nb_views >= 500 ? '#efe' : 'white',\n});\n\nconst catComponent = (props: any) => (\n    <ReferenceArrayField\n        label=\"Categoría\"\n        reference=\"api/v1/categories\"\n        source=\"catId\">\n        <SingleFieldList linkType=\"show\">\n            <ChipField source=\"name\" />\n        </SingleFieldList>\n    </ReferenceArrayField>\n);\n\nconst ProdList = (props: any) => {\n    return (\n        <List title=\"Productos\" filters={<ProdFilter />} {...props} perPage={25} sort={{ field: 'id', order: 'DESC' }}>\n            <Datagrid>\n                <TextField source='id' label='SKU' />\n                <FunctionField\n                    source='photoId'\n                    label=\"Foto\"\n                    sortable={false}\n                    render={(record: any) => {\n                        if (record.photoId !== null) {\n                            return (\n                                <img src={`https://lh3.google.com/u/0/d/${record.photoId}=w80-h80`} alt={record.name} />\n                            );\n                        } else {\n                            return (\n                                <p>Sin Foto</p>\n                            );\n                        }\n                    }}\n                />\n\n                <ReferenceField label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\" sortBy=\"cat_id\">\n                    <TextField source=\"name\" />\n                </ReferenceField>\n                <TextField source='name' label='Nombre' />\n                <TextField source='material' label='Material' />\n                <ReferenceField label=\"Color/Estampa\" source=\"colorId\" reference=\"api/v1/colors\" sortBy=\"color_id\">\n                    <TextField source=\"name\" />\n                </ReferenceField>\n                <TextField source='manufacturingCost' sortBy=\"manufacturing_cost\" label='Costo' />\n                <FunctionField\n                    source='mayor'\n                    sortable={false}\n                    label=\"X Mayor\"\n                    render={\n                        (record: any) => `${Math.round(record.manufacturingCost * 1.8)}`\n                    }\n                />\n                <FunctionField\n                    sortable={false}\n                    source='capilla'\n                    label=\"Precio Capilla\" render={\n                        (record: any) => `${Math.round((record.manufacturingCost * 1.8) * 1.3)}`}\n                />\n                <FunctionField\n                    sortable={false}\n                    source='menor'\n                    label=\"X Menor\"\n                    render={\n                        (record: any) => `${Math.round((record.manufacturingCost * 1.8) * 2)}`}\n                />\n\n                <FunctionField\n                    source='idMl'\n                    label=\"ML\"\n                    sortable={false}\n                    render={(record: any) => {\n                        if (record.mlId !== null) {\n                            return (\n                                <a href={`https://articulo.mercadolibre.com.ar/MLA-${record.idMl}`} target=\"_blank\">{record.idMl}</a>\n                            );\n                        } else {\n                            return (\n                                <p>No Publicado</p>\n                            );\n                        }\n                    }}\n                />\n                <DateField source=\"dateCreated\" sortBy=\"date_created\" />\n\n                <EditButton basePath='products' undoable={true} />\n                <DeleteButton basePath='products' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\n/*\nTODO media query to print and mobile\nconst isSmall = useMediaQuery((theme: any) => theme.breakpoints.down('sm'));\n<List...\n    {isSmall ? (\n        <SimpleList\n            primaryText={(record: any) => `${record.id} ${record.name}`}\n            secondaryText={(record: any) => {\n                <ReferenceField label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\" sortBy=\"name\" record={record}>\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            }}\n            tertiaryText={(record: any) => catComponent}\n            linkType={(record: any) => record.canEdit ? \"edit\" : \"show\"}\n            rowStyle={productRowStyle}>\n        </SimpleList>\n    ) : (\n        <Datagrid>\n        </Datagrid>\n    )}\n</List>\n*/\n\nexport default ProdList","import React from 'react'\nimport { required, minLength } from 'react-admin';\nimport { Edit, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\n\nconst validateName = [required(), minLength(2)];\n\nconst ProdEdit = (props: any) => {\n    return (\n        <Edit title='Editar Producto' {...props}>\n            <SimpleForm redirect=\"list\">\n                <ReferenceInput label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\">\n                    <SelectInput optionText=\"name\" validate={validateName} />\n                </ReferenceInput>\n                <TextInput source='name' label='Nombre' validate={required()} autoFocus />\n                <TextInput source='manufacturingCost' validate={required()} label='Costo' />\n                <TextInput source='material' label='Material' />\n                <ReferenceInput label=\"Color/Estampa\" source=\"colorId\" reference=\"api/v1/colors\">\n                    <SelectInput optionText=\"name\" />\n                </ReferenceInput>\n                <TextInput source='idMl' label='idMl' />\n                <TextInput source='photoId' label='Foto' />\n                <TextInput source='notes' label='Notas' />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default ProdEdit\n","import React from 'react'\nimport { Create, SimpleForm, TextInput, AutocompleteInput } from 'react-admin'\n\nconst UserCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Usuario' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='firstName' label='Nombre' autoFocus />\n                <AutocompleteInput source=\"role\" choices={[\n                    { id: 'PROVEEDOR', name: 'PROVEEDOR' },\n                    { id: 'CLIENTE', name: 'CLIENTE' },\n                    { id: 'ADMIN', name: 'ADMIN' },\n                    { id: 'VENDEDOR', name: 'VENDEDOR' },\n                ]} />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default UserCreate","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst UserList = (props: any) => {\n    return (\n        <List title=\"Usuarios\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='firstName' label='Nombre' />\n                <TextField source='role' label='Rol' />\n                <EditButton basePath='users' undoable={true} />\n                <DeleteButton basePath='users' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default UserList","import React from 'react'\nimport { Edit, SimpleForm, TextInput, AutocompleteInput } from 'react-admin'\n\nconst UserEdit = (props: any) => {\n    return (\n        <Edit title='Editar Producto' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='firstName' label='Nombre' autoFocus />\n                <AutocompleteInput source=\"role\" choices={[\n                    { id: 'PROVEEDOR', name: 'PROVEEDOR' },\n                    { id: 'CLIENTE', name: 'CLIENTE' },\n                    { id: 'ADMIN', name: 'ADMIN' },\n                    { id: 'VENDEDOR', name: 'VENDEDOR' },\n                ]} />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default UserEdit\n","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst ColorList = (props: any) => {\n    return (\n        <List title=\"Colores\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='name' label='Nombre' />\n                <EditButton basePath='colors' undoable={false} />\n                <DeleteButton basePath='colors' undoable={false} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default ColorList","import React from 'react'\nimport { Create, SimpleForm, TextInput } from 'react-admin'\n\nconst ColorCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Color' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='name' label='Nombre' autoFocus />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default ColorCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput } from 'react-admin'\n\nconst ColorEdit = (props: any) => {\n    return (\n        <Edit title='Editar Color' {...props}>\n            <SimpleForm>\n                <TextInput source='name' label='Nombre' autoFocus />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default ColorEdit\n","import React from 'react'\nimport { Create, SimpleForm, TextInput } from 'react-admin'\n\nconst PriceCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Precio' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='cloth_1_name' label='Nombre de la Tela 1' autoFocus />\n                <TextInput source='cloth_1_amount' label='Cantidad de Tela 1 (m2)' />\n                <TextInput source='cloth_2_name' label='Nombre de la Tela 2' />\n                <TextInput source='cloth_2_amount' label='Cantidad de Tela 2 (m2)' />\n                <TextInput source='elastEmb' label='elastEmb (m)' />\n                <TextInput source='elastCintura' label='elastCintura (m)' />\n                <TextInput source='elastBajoB' label='elastBajoB (m)' />\n                <TextInput source='puntilla' label='puntilla (m)' />\n                <TextInput source='bretel' label='bretel (m)' />\n                <TextInput source='argollas' label='argollas (unidades)' />\n                <TextInput source='ganchos' label='ganchos (unidades)' />\n                <TextInput source='reguladores' label='reguladores (unidades)' />\n                <TextInput source='manoDeObra' label='Costo de mano de obra ($)' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default PriceCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput } from 'react-admin'\n\nconst PriceEdit = (props: any) => {\n    return (\n        <Edit title='Editar Color' {...props}>\n            <SimpleForm>\n                <TextInput source='cloth_1_name' label='Nombre de la Tela 1' autoFocus />\n                <TextInput source='cloth_1_amount' label='Cantidad de Tela 1 (m2)' />\n                <TextInput source='cloth_2_name' label='Nombre de la Tela 2' />\n                <TextInput source='cloth_2_amount' label='Cantidad de Tela 2 (m2)' />\n                <TextInput source='elastEmb' label='elastEmb (m)' />\n                <TextInput source='elastCintura' label='elastCintura (m)' />\n                <TextInput source='elastBajoB' label='elastBajoB (m)' />\n                <TextInput source='puntilla' label='puntilla (m)' />\n                <TextInput source='bretel' label='bretel (m)' />\n                <TextInput source='argollas' label='argollas (unidades)' />\n                <TextInput source='ganchos' label='ganchos (unidades)' />\n                <TextInput source='reguladores' label='reguladores (unidades)' />\n                <TextInput source='manoDeObra' label='Costo de mano de obra ($)' />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default PriceEdit","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst PriceList = (props: any) => {\n    return (\n        <List title=\"Precios\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='cloth_1_name' label='Nombre de la Tela 1' />\n                <EditButton basePath='prices' undoable={false} />\n                <DeleteButton basePath='prices' undoable={false} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default PriceList","import React from 'react'\nimport {Create, SimpleForm, TextInput, ReferenceInput, SelectInput} from 'react-admin'\n\nconst choices = [\n    { id: 1, name: 'name', },\n    { id: 2, name: 'name' }\n ];\n const optionRenderer = (choice: any) => `${choice.id} ${choice.name}`;\n\nconst StockCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Movimiento de Stock' {...props}>\n            <SimpleForm redirect=\"list\">\n                <ReferenceInput perPage={false} label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <SelectInput choices={choices} optionText={optionRenderer} />\n                </ReferenceInput>\n                <ReferenceInput label=\"Usuario\" source=\"userId\" reference=\"api/v1/users\" sortBy=\"firstName\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source='t1' />\n                <TextInput source='t2' />\n                <TextInput source='t3' />\n                <TextInput source='t4' />\n                <TextInput source='t5' />\n                <TextInput source='t6' />\n                <TextInput source='t7' />\n                <TextInput source='t8' />\n                <TextInput source='t9' />\n                <TextInput source='t10' />\n                <TextInput source='t11' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default StockCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\n\nconst choices = [\n    { id: 1, name: 'name', },\n    { id: 2, name: 'name' }\n ];\n const optionRenderer = choice => `${choice.id} ${choice.name}`;\n\nconst StockEdit = (props: any) => {\n    return (\n        <Edit title='Editar Movimiento de Stock' {...props}>\n            <SimpleForm redirect=\"list\">\n                <ReferenceInput perPage={false} label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <SelectInput choices={choices} optionText={optionRenderer} />\n                </ReferenceInput>\n                <ReferenceInput label=\"Usuario\" source=\"userId\" reference=\"api/v1/users\" sortBy=\"firstName\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source='t1' />\n                <TextInput source='t2' />\n                <TextInput source='t3' />\n                <TextInput source='t4' />\n                <TextInput source='t5' />\n                <TextInput source='t6' />\n                <TextInput source='t7' />\n                <TextInput source='t8' />\n                <TextInput source='t9' />\n                <TextInput source='t10' />\n                <TextInput source='t11' />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default StockEdit\n","import React from 'react'\nimport { Filter, ReferenceInput, SelectInput } from 'react-admin';\nimport { Datagrid, DeleteButton, EditButton, List, TextField, ReferenceField, DateField, FunctionField } from 'react-admin'\n\nconst Filters = (props: any) => (\n    <Filter {...props}>\n        <ReferenceInput\n            perPage={false}\n            label=\"Producto\"\n            source=\"productId\"\n            reference=\"api/v1/products\"\n            allowEmpty\n            alwaysOn\n        >\n            <SelectInput\n                choises={[{ id: 1, name: 'name' }]}\n                optionText={(choice: any) => `${choice.id} ${choice.name}`}\n            />\n        </ReferenceInput>\n        <ReferenceInput\n            perPage={false}\n            label=\"Usuario\"\n            source=\"userId\"\n            reference=\"api/v1/users\"\n            allowEmpty\n            alwaysOn\n        >\n            <SelectInput optionText=\"firstName\" />\n        </ReferenceInput>\n    </Filter>\n);\n\nconst StockList = (props: any) => {\n    return (\n        <List title=\"Stock\" filters={<Filters />} {...props} perPage={25} sort={{ field: 'id', order: 'DESC' }}>\n            <Datagrid>\n                <TextField source='id' label='id' />\n                <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"product_id\">\n                    <FunctionField\n                        label=\"Nombre\"\n                        render={(record: any) => `SKU ${record.id} - ${record.name}`}\n                    />\n                </ReferenceField>\n\n                <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"product_id\">\n                    <FunctionField\n                        source='photoId'\n                        label=\"Foto\"\n                        sortable={false}\n                        render={(record: any) => {\n                            if (record.photoId !== null) {\n                                return (\n                                    <img src={`https://lh3.google.com/u/0/d/${record.photoId}=w80-h80`} alt={record.name} />\n                                );\n                            } else {\n                                return (\n                                    <p>Sin Foto</p>\n                                );\n                            }\n                        }}\n                    />\n                </ReferenceField>\n\n                <ReferenceField label=\"Usuario\" source=\"userId\" reference=\"api/v1/users\" sortBy=\"user_id\">\n                    <TextField source=\"firstName\" />\n                </ReferenceField>\n                <TextField sortable={false} source='t1' />\n                <TextField sortable={false} source='t2' />\n                <TextField sortable={false} source='t3' />\n                <TextField sortable={false} source='t4' />\n                <TextField sortable={false} source='t5' />\n                <TextField sortable={false} source='t6' />\n                <TextField sortable={false} source='t7' />\n                <TextField sortable={false} source='t8' />\n                <TextField sortable={false} source='t9' />\n                <TextField sortable={false} source='t10' />\n                <TextField sortable={false} source='t11' />\n                <TextField sortable={false} source='notes' label='Notes' />\n                <DateField source=\"dateCreated\" />\n\n                <EditButton basePath='stock' undoable={true} />\n                <DeleteButton basePath='stock' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default StockList","import React from 'react'\nimport { Create, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\n\nconst SaleCreate = (props: any) => {\n    return (\n        <Create title='Nueva Venta' {...props}>\n            <SimpleForm redirect=\"edit\">\n                <ReferenceInput label=\"Lugar de Venta / Vendedor\" source=\"sellerId\" reference=\"api/v1/users\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <ReferenceInput label=\"Cliente\" source=\"clientId\" reference=\"api/v1/users\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source='notes' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default SaleCreate","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport { Button } from 'react-admin';\n\nconst AddProductsButton = ({ record }) => (\n    <Button\n        variant=\"raised\"\n        component={Link}\n        to={`/api/v1/saleproducts/create?saleId=${record.id}`}\n        label=\"Agregar Productos\"\n        title=\"Agregar Productos\">\n        <ChatBubbleIcon />\n    </Button>\n);\n\nexport default AddProductsButton;","import React from 'react'\nimport {\n    Edit,\n    SimpleForm,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    Tab,\n    TabbedShowLayout,\n    ReferenceManyField,\n    Datagrid,\n    DateField,\n    TextField,\n    EditButton,\n    ReferenceField,\n    FunctionField\n} from 'react-admin'\nimport AddProductsButton from './AddProductsButton';\n\nconst SaleEdit = (props: any) => {\n    return (\n        <Edit title='Editar Venta' {...props}>\n            <TabbedShowLayout>\n                <Tab label=\"Summary\">\n                    <SimpleForm redirect=\"list\">\n                        <ReferenceInput label=\"Lugar de Venta / Vendedor\" source=\"sellerId\" reference=\"api/v1/users\">\n                            <SelectInput optionText=\"firstName\" />\n                        </ReferenceInput>\n                        <ReferenceInput label=\"Cliente\" source=\"clientId\" reference=\"api/v1/users\">\n                            <SelectInput optionText=\"firstName\" />\n                        </ReferenceInput>\n                        <TextInput source='notes' />\n                    </SimpleForm>\n                </Tab>\n                <Tab label=\"Productos\" path=\"products\">\n                    <ReferenceManyField\n                        addLabel={false}\n                        reference=\"api/v1/saleproducts\"\n                        target=\"saleId\"\n                        sort={{ field: 'id', order: 'DESC' }}  >\n                        <Datagrid>\n                            <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"name\">\n                                <FunctionField\n                                    label=\"Nombre\"\n                                    render={(record: any) => `SKU ${record.id} - ${record.name}`}\n                                />\n                            </ReferenceField>\n                            <TextField source='size' label='Talle' />\n                            <TextField source='quantity' label='Cantidad' />\n                            <TextField source='notes' label='Notas' />\n                            <DateField source=\"dateCreated\" label='Fecha' />\n                            <EditButton />\n                        </Datagrid>\n                    </ReferenceManyField>\n                    <AddProductsButton {...props} />\n                </Tab>\n            </TabbedShowLayout>\n        </Edit>\n    )\n}\n\nexport default SaleEdit\n","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField, ReferenceField, DateField } from 'react-admin'\n\nconst SaleList = (props: any) => {\n    return (\n        <List title=\"Sales\" {...props} perPage={25} sort={{ field: 'id', order: 'DESC' }}>\n            <Datagrid>\n                <TextField source='id' label='id' />\n                <ReferenceField label=\"Lugar de Venta / Vendedor\" source=\"sellerId\" reference=\"api/v1/users\" sortBy=\"firstName\">\n                    <TextField source=\"firstName\" />\n                </ReferenceField>\n                <ReferenceField label=\"Cliente\" source=\"clientId\" reference=\"api/v1/users\" sortBy=\"firstName\">\n                    <TextField source=\"firstName\" />\n                </ReferenceField>\n                <TextField source='notes' label='Notas' />\n                <DateField source=\"dateCreated\" />\n                \n                <EditButton basePath='sales' undoable={true} />\n                <DeleteButton basePath='sales' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default SaleList","import React from 'react'\nimport { Create, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\nimport { parse } from 'query-string';\n\nconst productChoice = [\n    { id: 1, name: 'name' }\n];\nconst productRenderer = (productChoice: any) => `${productChoice.id} ${productChoice.name}`;\n\nconst optionChoice = [\n    { id: 1, type: 'type', name: 'name' }\n];\nconst optionRenderer = (optionChoice: any) => `${optionChoice.type} - ${optionChoice.name}`;\n\nconst SaleProductsCreate = (props: any) => {\n    const { saleId: saleId_string } = parse(props.location.search);\n    const saleId = saleId_string ? parseInt(saleId_string, 10) : '';\n    console.log(saleId)\n    const redirect = saleId ? `/api/v1/sales/${saleId}/products` : 'list';\n    console.log(redirect)\n\n    return (\n        <Create title='Nuevo SaleProduct' {...props}>\n            <SimpleForm initialValues={{ saleId }} redirect={redirect}>\n                <ReferenceInput perPage={false} label=\"Venta\" source=\"saleId\" reference=\"api/v1/sales\">\n                    <SelectInput optionText=\"id\" />\n                </ReferenceInput>\n                <ReferenceInput perPage={false} label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <SelectInput choices={productChoice} optionText={productRenderer} />\n                </ReferenceInput>\n                <TextInput source='size' />\n                <TextInput source='quantity' />\n                <ReferenceInput label=\"Método de Pago\" source=\"paymentMethodId\" reference=\"api/v1/options\">\n                    <SelectInput choices={optionChoice} optionText={optionRenderer} fullWidth />\n                </ReferenceInput>\n                <ReferenceInput label=\"Precio\" source=\"priceId\" reference=\"api/v1/options\">\n                    <SelectInput choices={optionChoice} optionText={optionRenderer} fullWidth />\n                </ReferenceInput>\n                <TextInput source='customPrice' />\n                <TextInput source='notes' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default SaleProductsCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput, ReferenceInput, SelectInput, TextField } from 'react-admin'\nimport { parse } from 'query-string';\n\nconst productChoice = [\n    { id: 1, name: 'name', },\n    { id: 2, name: 'name' }\n];\nconst productRenderer = (productChoice: any) => `${productChoice.id} ${productChoice.name}`;\n\nconst optionChoice = [\n    { id: 1, type: 'type', name: 'name', },\n    { id: 2, type: 'type', name: 'name' }\n];\nconst optionRenderer = (optionChoice: any) => `${optionChoice.name} - ${optionChoice.type}`;\n\nconst SaleProductsEdit = (props: any) => {\n    const { saleId: saleId_string } = parse(props.location.search);\n    const saleId = saleId_string ? parseInt(saleId_string, 10) : '';\n    const redirect = saleId ? `api/v1/sales/${saleId}/products` : 'list';\n\n    return (\n        <Edit title='Nuevo SaleProduct' {...props}>\n            <SimpleForm initialValues={{ saleId }} redirect={redirect}>\n                <ReferenceInput perPage={false} label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <SelectInput choices={productChoice} optionText={productRenderer} />\n                </ReferenceInput>\n                <TextInput source='size' />\n                <TextInput source='quantity' />\n                <ReferenceInput label=\"Método de Pago\" source=\"paymentMethodId\" reference=\"api/v1/options\">\n                    <SelectInput choices={optionChoice} optionText={optionRenderer} fullWidth />\n                </ReferenceInput>\n                <ReferenceInput label=\"Precio\" source=\"priceId\" reference=\"api/v1/options\">\n                    <SelectInput choices={optionChoice} optionText={optionRenderer} fullWidth />\n                </ReferenceInput>\n                <TextInput source='customPrice' />\n                <TextInput source='notes' />\n            </SimpleForm>\n        </Edit >\n    )\n}\n\nexport default SaleProductsEdit","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField, DateField, ReferenceField, FunctionField } from 'react-admin'\n\nconst SaleProductsList = (props: any) => {\n    return (\n        <List title=\"SalesProducts\" {...props} perPage={25}>\n            <Datagrid>\n                <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"name\">\n                    <FunctionField\n                        label=\"Nombre\"\n                        render={(record: any) => `SKU ${record.id} - ${record.name}`}\n                    />\n                </ReferenceField>\n                <TextField source='size' />\n                <TextField source='quantity' />\n                <TextField source='notes' />\n                <DateField source=\"dateCreated\" />\n                \n                <EditButton basePath='saleproducts' undoable={true} />\n                <DeleteButton basePath='saleproducts' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default SaleProductsList","import React from 'react'\nimport { Create, SimpleForm, TextInput, AutocompleteInput } from 'react-admin'\n\nconst OptionCreate = (props: any) => {\n    return (\n        <Create title='Nueva Opción' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='name' label='Nombre' autoFocus />\n                <AutocompleteInput source=\"type\" label='Tipo' choices={[\n                    { id: 'rol', name: 'ROL' },\n                    { id: 'paymentMethod', name: 'METODO DE PAGO' },\n                    { id: 'price', name: 'PRECIO' }\n                ]} />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default OptionCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput, AutocompleteInput } from 'react-admin'\n\nconst OptionEdit = (props: any) => {\n    return (\n        <Edit title='Editar Opción' {...props}>\n            <SimpleForm>\n                <TextInput source='name' label='Nombre' autoFocus />\n                <AutocompleteInput source=\"type\" label='Tipo' choices={[\n                    { id: 'rol', name: 'ROL' },\n                    { id: 'paymentMethod', name: 'METODO DE PAGO' },\n                    { id: 'price', name: 'PRECIO' }\n                ]} />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default OptionEdit\n","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst OptionList = (props: any) => {\n    return (\n        <List title=\"Opciones\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='name' label='Nombre' />\n                <TextField source='type' label='Tipo' />\n                <EditButton basePath='options' undoable={false} />\n                <DeleteButton basePath='options' undoable={false} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default OptionList","import React from 'react'\nimport { Datagrid, List, TextField, ReferenceField, FunctionField } from 'react-admin'\n\nconst ReportList = (props: any) => {\n    return (\n        <List title=\"Disponibilidad de Productos\" {...props} perPage={25}>\n            <Datagrid>\n                <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"name\">\n                    <FunctionField\n                        label=\"Nombre\"\n                        render={(record: any) => `SKU ${record.id} - ${record.name}`}\n                    />\n                </ReferenceField>\n                <TextField source='t1' />\n                <TextField source='t2' />\n                <TextField source='t3' />\n                <TextField source='t4' />\n                <TextField source='t5' />\n                <TextField source='t6' />\n                <TextField source='t7' />\n                <TextField source='t8' />\n                <TextField source='t9' />\n                <TextField source='t10' />\n                <TextField source='t11' />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default ReportList","import './App.css';\nimport React from 'react'\nimport { Admin, fetchUtils, Resource } from 'react-admin'\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport CatCreate from './components/category/CatCreate';\nimport CatList from './components/category/CatList';\nimport CatEdit from './components/category/CatEdit';\nimport ProdCreate from './components/product/ProdCreate';\nimport ProdList from './components/product/ProdList';\nimport ProdEdit from './components/product/ProdEdit';\nimport UserCreate from './components/user/UserCreate';\nimport UserList from './components/user/UserList';\nimport UserEdit from './components/user/UserEdit';\nimport ColorList from './components/color/ColorList';\nimport ColorCreate from './components/color/ColorCreate';\nimport ColorEdit from './components/color/ColorEdit';\nimport PriceCreate from './components/price/PriceCreate';\nimport PriceEdit from './components/price/PriceEdit';\nimport PriceList from './components/price/PriceList';\nimport StockCreate from './components/stock/StockCreate';\nimport StockEdit from './components/stock/StockEdit';\nimport StockList from './components/stock/StockList';\nimport SaleCreate from './components/sale/SaleCreate';\nimport SaleEdit from './components/sale/SaleEdit';\nimport SaleList from './components/sale/SaleList';\nimport SaleProductsCreate from './components/saleproducts/SaleProductsCreate';\nimport SaleProductsEdit from './components/saleproducts/SaleProductsEdit';\nimport SaleProductsList from './components/saleproducts/SaleProductsList';\nimport OptionCreate from './components/option/OptionCreate';\nimport OptionEdit from './components/option/OptionEdit';\nimport OptionList from './components/option/OptionList';\nimport ReportList from './components/report/ReportList';\n\nfunction App() {\n    let apiUrl = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEV : process.env.REACT_APP_API_URL_PROD;\n    if (apiUrl === undefined)\n        apiUrl = 'REACT_APP_API_URL undefined'\n    console.log(apiUrl);\n    return (\n        <Admin dataProvider={simpleRestProvider(apiUrl, fetchUtils.fetchJson, 'X-Total-Count')}>\n            <Resource\n                name='api/v1/products'\n                options={{ label: 'Productos' }}\n                list={ProdList}\n                create={ProdCreate}\n                edit={ProdEdit}\n            />\n            <Resource\n                name='api/v1/stock'\n                options={{ label: 'Stock' }}\n                list={StockList}\n                create={StockCreate}\n                edit={StockEdit}\n            />\n            <Resource\n                name='api/v1/sales'\n                options={{ label: 'Ventas' }}\n                list={SaleList}\n                create={SaleCreate}\n                edit={SaleEdit}\n            />\n            <Resource\n                name='api/v1/users'\n                options={{ label: 'Usuarios' }}\n                list={UserList}\n                create={UserCreate}\n                edit={UserEdit}\n            />\n            <Resource\n                name='api/v1/categories'\n                options={{ label: 'Categorías' }}\n                list={CatList}\n                create={CatCreate}\n                edit={CatEdit}\n            />\n            <Resource\n                name='api/v1/colors'\n                options={{ label: 'Colores' }}\n                list={ColorList}\n                create={ColorCreate}\n                edit={ColorEdit}\n            />\n            <Resource\n                name='api/v1/prices'\n                options={{ label: 'Precios' }}\n                list={PriceList}\n                create={PriceCreate}\n                edit={PriceEdit}\n            />\n            <Resource\n                name='api/v1/saleproducts'\n                options={{ label: 'SaleProducts' }}\n                list={SaleProductsList}\n                create={SaleProductsCreate}\n                edit={SaleProductsEdit}\n            />\n            <Resource\n                name='api/v1/options'\n                options={{ label: 'Opciones' }}\n                list={OptionList}\n                create={OptionCreate}\n                edit={OptionEdit}\n            />\n            <Resource\n                name='api/v1/report'\n                options={{ label: 'Reporte' }}\n                list={ReportList}\n            />\n        </Admin>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}