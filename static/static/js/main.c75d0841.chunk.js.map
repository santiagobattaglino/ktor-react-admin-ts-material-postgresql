{"version":3,"sources":["components/category/CatCreate.tsx","components/category/CatList.tsx","components/category/CatEdit.tsx","components/product/ProdCreate.tsx","components/product/ProdList.tsx","components/product/ProdEdit.tsx","components/user/UserCreate.tsx","components/user/UserList.tsx","components/user/UserEdit.tsx","components/color/ColorList.tsx","components/color/ColorCreate.tsx","components/color/ColorEdit.tsx","components/price/PriceCreate.tsx","components/price/PriceEdit.tsx","components/price/PriceList.tsx","components/stock/StockCreate.tsx","components/stock/StockEdit.tsx","components/stock/StockList.tsx","components/sale/SaleCreate.tsx","components/sale/AddProductsButton.js","components/sale/SaleEdit.tsx","components/sale/SaleList.tsx","components/saleproducts/SaleProductsCreate.tsx","components/saleproducts/SaleProductsEdit.tsx","components/saleproducts/SaleProductsList.tsx","components/option/OptionCreate.tsx","components/option/OptionEdit.tsx","components/option/OptionList.tsx","components/report/ReportList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CatCreate","props","Create","title","SimpleForm","redirect","TextInput","source","label","autoFocus","CatList","List","perPage","pagination","Datagrid","TextField","EditButton","basePath","undoable","DeleteButton","CatEdit","Edit","validateName","required","minLength","ProdCreate","email","translate","number","minValue","regex","choices","ReferenceInput","reference","SelectInput","optionText","validate","ProdFilter","Filter","alwaysOn","allowEmpty","ProdList","filters","sort","field","order","FunctionField","sortable","render","record","photoId","src","alt","name","ReferenceField","sortBy","mlId","href","idMl","target","DateField","ProdEdit","UserCreate","AutocompleteInput","id","UserList","UserEdit","ColorList","ColorCreate","ColorEdit","PriceCreate","PriceEdit","PriceList","optionRenderer","choice","StockCreate","StockEdit","Filters","choises","StockList","SaleCreate","initialValues","paymentMethodId","priceId","AddProductsButton","Button","variant","component","Link","to","Total","useQuery","type","resource","payload","page","data","loading","total","error","Loading","Error","console","log","length","sum","map","sales","reduce","a","b","SaleEdit","TabbedForm","FormTab","path","ReferenceManyField","addLabel","SaleList","productChoice","productRenderer","SaleProductsCreate","saleId_string","parse","location","search","saleId","parseInt","SaleProductsEdit","SaleProductsList","OptionCreate","OptionEdit","OptionList","ReportList","App","apiUrl","process","undefined","Admin","dataProvider","simpleRestProvider","fetchUtils","fetchJson","Resource","options","list","create","edit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c75d0841.chunk.js","sourcesContent":["import React from 'react'\nimport { Create, SimpleForm, TextInput } from 'react-admin'\n\nconst CatCreate = (props: any) => {\n    return (\n        <Create title='Nueva Categoría' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='name' label='Nombre' autoFocus />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default CatCreate","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst CatList = (props: any) => {\n    return (\n        <List title=\"Categorías\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='name' label='Nombre' />\n                <EditButton basePath='categories' undoable={false} />\n                <DeleteButton basePath='categories' undoable={false} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default CatList","import React from 'react'\nimport { Edit, SimpleForm, TextInput } from 'react-admin'\n\nconst CatEdit = (props: any) => {\n    return (\n        <Edit title='Editar Categoría' {...props}>\n            <SimpleForm>\n                <TextInput source='name' label='Nombre' autoFocus />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default CatEdit\n","import React from 'react'\nimport { required, minLength, email, minValue, regex, choices, number } from 'react-admin';\nimport { Create, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\n\n// https://marmelab.com/react-admin/CreateEdit.html#validation\nconst validateName = [required(), minLength(2)];\nconst emailMsg = ({ translate }) => translate('myroot.validation.email_invalid');\nconst validateEmail = email(emailMsg);\nconst validateAge = [number(), minValue(18)];\nconst validateZipCode = regex(/^\\d{5}$/, 'Must be a valid Zip Code');\nconst validateSex = choices(['m', 'f'], 'Must be Male or Female');\n\nconst ProdCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Producto' {...props}>\n            <SimpleForm redirect=\"list\">\n                <ReferenceInput label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\">\n                    <SelectInput optionText=\"name\" validate={validateName} />\n                </ReferenceInput>\n                <TextInput source='name' label='Nombre' validate={required()} autoFocus />\n                <TextInput source='manufacturingCost' validate={required()} label='Costo' />\n                <TextInput source='material' label='Material' />\n                <ReferenceInput label=\"Color/Estampa\" source=\"colorId\" reference=\"api/v1/colors\">\n                    <SelectInput optionText=\"name\" />\n                </ReferenceInput>\n                <TextInput source='idMl' label='idMl' />\n                <TextInput source='photoId' label='Foto' />\n                <TextInput source='notes' label='Notas' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default ProdCreate","import {\n    Datagrid,\n    DeleteButton,\n    EditButton,\n    List,\n    TextField,\n    ReferenceField,\n    DateField,\n    FunctionField,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    Filter,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField\n} from 'react-admin'\n\nconst ProdFilter = (props) => (\n    <Filter {...props}>\n        <TextInput label=\"Search\" source=\"q\" alwaysOn allowEmpty />\n        <ReferenceInput label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\" alwaysOn allowEmpty>\n            <SelectInput optionText=\"name\" />\n        </ReferenceInput>\n    </Filter>\n);\n\nconst productRowStyle = (record: { nb_views: number; }, index: any) => ({\n    backgroundColor: record.nb_views >= 500 ? '#efe' : 'white',\n});\n\nconst catComponent = (props: any) => (\n    <ReferenceArrayField\n        label=\"Categoría\"\n        reference=\"api/v1/categories\"\n        source=\"catId\">\n        <SingleFieldList linkType=\"show\">\n            <ChipField source=\"name\" />\n        </SingleFieldList>\n    </ReferenceArrayField>\n);\n\nconst ProdList = (props: any) => {\n    return (\n        <List title=\"Productos\" filters={<ProdFilter />} {...props} perPage={25} sort={{ field: 'id', order: 'DESC' }}>\n            <Datagrid>\n                <TextField source='id' label='SKU' />\n                <FunctionField\n                    source='photoId'\n                    label=\"Foto\"\n                    sortable={false}\n                    render={(record: any) => {\n                        if (record.photoId !== null) {\n                            return (\n                                <img src={`https://lh3.google.com/u/0/d/${record.photoId}=w80-h80`} alt={record.name} />\n                            );\n                        } else {\n                            return (\n                                <p>Sin Foto</p>\n                            );\n                        }\n                    }}\n                />\n\n                <ReferenceField label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\" sortBy=\"cat_id\">\n                    <TextField source=\"name\" />\n                </ReferenceField>\n                <TextField source='name' label='Nombre' />\n                <TextField source='material' label='Material' />\n                <ReferenceField label=\"Color/Estampa\" source=\"colorId\" reference=\"api/v1/colors\" sortBy=\"color_id\">\n                    <TextField source=\"name\" />\n                </ReferenceField>\n                <TextField source='manufacturingCost' label='Costo' />\n                <TextField source='precioMayor' sortBy=\"manufacturing_cost\" label='Mayor' />\n                <TextField source='precioCapilla' sortBy=\"manufacturing_cost\" label='Capilla' />\n                <TextField source='precioMenor' sortBy=\"manufacturing_cost\" label='Menor' />\n                <TextField source='precioMl' sortBy=\"manufacturing_cost\" label='ML' />\n                <FunctionField\n                    source='idMl'\n                    label=\"ML\"\n                    sortable={false}\n                    render={(record: any) => {\n                        if (record.mlId !== null) {\n                            return (\n                                <a href={`https://articulo.mercadolibre.com.ar/MLA-${record.idMl}`} target=\"_blank\">{record.idMl}</a>\n                            );\n                        } else {\n                            return (\n                                <p>No Publicado</p>\n                            );\n                        }\n                    }}\n                />\n                <DateField source=\"dateCreated\" sortBy=\"date_created\" />\n\n                <EditButton basePath='products' undoable={true} />\n                <DeleteButton basePath='products' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\n/*\n// TODO remove this, just for reference on how to use FunctionFields\n<FunctionField\n                    source='mayor'\n                    sortable={false}\n                    label=\"X Mayor\"\n                    render={\n                        (record: any) => `${Math.round(record.manufacturingCost * 1.8)}`\n                    }\n                />\n                <FunctionField\n                    sortable={false}\n                    source='capilla'\n                    label=\"Precio Capilla\" render={\n                        (record: any) => `${Math.round((record.manufacturingCost * 1.8) * 1.3)}`}\n                />\n                <FunctionField\n                    sortable={false}\n                    source='menor'\n                    label=\"X Menor\"\n                    render={\n                        (record: any) => `${Math.round((record.manufacturingCost * 1.8) * 2)}`}\n                />\n/*\n\nTODO media query to print and mobile\nconst isSmall = useMediaQuery((theme: any) => theme.breakpoints.down('sm'));\n<List...\n    {isSmall ? (\n        <SimpleList\n            primaryText={(record: any) => `${record.id} ${record.name}`}\n            secondaryText={(record: any) => {\n                <ReferenceField label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\" sortBy=\"name\" record={record}>\n                    <TextField source=\"name\" />\n                </ReferenceField>\n            }}\n            tertiaryText={(record: any) => catComponent}\n            linkType={(record: any) => record.canEdit ? \"edit\" : \"show\"}\n            rowStyle={productRowStyle}>\n        </SimpleList>\n    ) : (\n        <Datagrid>\n        </Datagrid>\n    )}\n</List>\n*/\n\nexport default ProdList","import React from 'react'\nimport { required, minLength } from 'react-admin';\nimport { Edit, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\n\nconst validateName = [required(), minLength(2)];\n\nconst ProdEdit = (props: any) => {\n    return (\n        <Edit title='Editar Producto' {...props}>\n            <SimpleForm redirect=\"list\">\n                <ReferenceInput label=\"Categoría\" source=\"catId\" reference=\"api/v1/categories\">\n                    <SelectInput optionText=\"name\" validate={validateName} />\n                </ReferenceInput>\n                <TextInput source='name' label='Nombre' validate={required()} autoFocus />\n                <TextInput source='manufacturingCost' validate={required()} label='Costo' />\n                <TextInput source='material' label='Material' />\n                <ReferenceInput label=\"Color/Estampa\" source=\"colorId\" reference=\"api/v1/colors\">\n                    <SelectInput optionText=\"name\" />\n                </ReferenceInput>\n                <TextInput source='idMl' label='idMl' />\n                <TextInput source='photoId' label='Foto' />\n                <TextInput source='notes' label='Notas' />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default ProdEdit\n","import React from 'react'\nimport { Create, SimpleForm, TextInput, AutocompleteInput } from 'react-admin'\n\nconst UserCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Usuario' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='firstName' label='Nombre' autoFocus />\n                <AutocompleteInput source=\"role\" choices={[\n                    { id: 'PROVEEDOR', name: 'PROVEEDOR' },\n                    { id: 'CLIENTE', name: 'CLIENTE' },\n                    { id: 'ADMIN', name: 'ADMIN' },\n                    { id: 'VENDEDOR', name: 'VENDEDOR' },\n                ]} />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default UserCreate","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst UserList = (props: any) => {\n    return (\n        <List title=\"Usuarios\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='firstName' label='Nombre' />\n                <TextField source='role' label='Rol' />\n                <EditButton basePath='users' undoable={true} />\n                <DeleteButton basePath='users' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default UserList","import React from 'react'\nimport { Edit, SimpleForm, TextInput, AutocompleteInput } from 'react-admin'\n\nconst UserEdit = (props: any) => {\n    return (\n        <Edit title='Editar Producto' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='firstName' label='Nombre' autoFocus />\n                <AutocompleteInput source=\"role\" choices={[\n                    { id: 'PROVEEDOR', name: 'PROVEEDOR' },\n                    { id: 'CLIENTE', name: 'CLIENTE' },\n                    { id: 'ADMIN', name: 'ADMIN' },\n                    { id: 'VENDEDOR', name: 'VENDEDOR' },\n                ]} />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default UserEdit\n","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst ColorList = (props: any) => {\n    return (\n        <List title=\"Colores\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='name' label='Nombre' />\n                <EditButton basePath='colors' undoable={false} />\n                <DeleteButton basePath='colors' undoable={false} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default ColorList","import React from 'react'\nimport { Create, SimpleForm, TextInput } from 'react-admin'\n\nconst ColorCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Color' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='name' label='Nombre' autoFocus />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default ColorCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput } from 'react-admin'\n\nconst ColorEdit = (props: any) => {\n    return (\n        <Edit title='Editar Color' {...props}>\n            <SimpleForm>\n                <TextInput source='name' label='Nombre' autoFocus />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default ColorEdit\n","import React from 'react'\nimport { Create, SimpleForm, TextInput } from 'react-admin'\n\nconst PriceCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Precio' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='cloth_1_name' label='Nombre de la Tela 1' autoFocus />\n                <TextInput source='cloth_1_amount' label='Cantidad de Tela 1 (m2)' />\n                <TextInput source='cloth_2_name' label='Nombre de la Tela 2' />\n                <TextInput source='cloth_2_amount' label='Cantidad de Tela 2 (m2)' />\n                <TextInput source='elastEmb' label='elastEmb (m)' />\n                <TextInput source='elastCintura' label='elastCintura (m)' />\n                <TextInput source='elastBajoB' label='elastBajoB (m)' />\n                <TextInput source='puntilla' label='puntilla (m)' />\n                <TextInput source='bretel' label='bretel (m)' />\n                <TextInput source='argollas' label='argollas (unidades)' />\n                <TextInput source='ganchos' label='ganchos (unidades)' />\n                <TextInput source='reguladores' label='reguladores (unidades)' />\n                <TextInput source='manoDeObra' label='Costo de mano de obra ($)' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default PriceCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput } from 'react-admin'\n\nconst PriceEdit = (props: any) => {\n    return (\n        <Edit title='Editar Color' {...props}>\n            <SimpleForm>\n                <TextInput source='cloth_1_name' label='Nombre de la Tela 1' autoFocus />\n                <TextInput source='cloth_1_amount' label='Cantidad de Tela 1 (m2)' />\n                <TextInput source='cloth_2_name' label='Nombre de la Tela 2' />\n                <TextInput source='cloth_2_amount' label='Cantidad de Tela 2 (m2)' />\n                <TextInput source='elastEmb' label='elastEmb (m)' />\n                <TextInput source='elastCintura' label='elastCintura (m)' />\n                <TextInput source='elastBajoB' label='elastBajoB (m)' />\n                <TextInput source='puntilla' label='puntilla (m)' />\n                <TextInput source='bretel' label='bretel (m)' />\n                <TextInput source='argollas' label='argollas (unidades)' />\n                <TextInput source='ganchos' label='ganchos (unidades)' />\n                <TextInput source='reguladores' label='reguladores (unidades)' />\n                <TextInput source='manoDeObra' label='Costo de mano de obra ($)' />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default PriceEdit","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst PriceList = (props: any) => {\n    return (\n        <List title=\"Precios\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='cloth_1_name' label='Nombre de la Tela 1' />\n                <EditButton basePath='prices' undoable={false} />\n                <DeleteButton basePath='prices' undoable={false} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default PriceList","import React from 'react'\nimport {Create, SimpleForm, TextInput, ReferenceInput, SelectInput} from 'react-admin'\n\nconst choices = [\n    { id: 1, name: 'name', },\n    { id: 2, name: 'name' }\n ];\n const optionRenderer = (choice: any) => `${choice.id} ${choice.name}`;\n\nconst StockCreate = (props: any) => {\n    return (\n        <Create title='Nuevo Movimiento de Stock' {...props}>\n            <SimpleForm redirect=\"list\">\n                <ReferenceInput perPage={false} label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <SelectInput choices={choices} optionText={optionRenderer} />\n                </ReferenceInput>\n                <ReferenceInput label=\"Usuario\" source=\"userId\" reference=\"api/v1/users\" sortBy=\"firstName\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source='t1' />\n                <TextInput source='t2' />\n                <TextInput source='t3' />\n                <TextInput source='t4' />\n                <TextInput source='t5' />\n                <TextInput source='t6' />\n                <TextInput source='t7' />\n                <TextInput source='t8' />\n                <TextInput source='t9' />\n                <TextInput source='t10' />\n                <TextInput source='t11' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default StockCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\n\nconst choices = [\n    { id: 1, name: 'name', },\n    { id: 2, name: 'name' }\n ];\n const optionRenderer = choice => `${choice.id} ${choice.name}`;\n\nconst StockEdit = (props: any) => {\n    return (\n        <Edit title='Editar Movimiento de Stock' {...props}>\n            <SimpleForm redirect=\"list\">\n                <ReferenceInput perPage={false} label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <SelectInput choices={choices} optionText={optionRenderer} />\n                </ReferenceInput>\n                <ReferenceInput label=\"Usuario\" source=\"userId\" reference=\"api/v1/users\" sortBy=\"firstName\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n                <TextInput source='t1' />\n                <TextInput source='t2' />\n                <TextInput source='t3' />\n                <TextInput source='t4' />\n                <TextInput source='t5' />\n                <TextInput source='t6' />\n                <TextInput source='t7' />\n                <TextInput source='t8' />\n                <TextInput source='t9' />\n                <TextInput source='t10' />\n                <TextInput source='t11' />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default StockEdit\n","import React from 'react'\nimport { Filter, ReferenceInput, SelectInput } from 'react-admin';\nimport { Datagrid, DeleteButton, EditButton, List, TextField, ReferenceField, DateField, FunctionField } from 'react-admin'\n\nconst Filters = (props: any) => (\n    <Filter {...props}>\n        <ReferenceInput\n            perPage={false}\n            label=\"Producto\"\n            source=\"productId\"\n            reference=\"api/v1/products\"\n            allowEmpty\n            alwaysOn\n        >\n            <SelectInput\n                choises={[{ id: 1, name: 'name' }]}\n                optionText={(choice: any) => `${choice.id} ${choice.name}`}\n            />\n        </ReferenceInput>\n        <ReferenceInput\n            perPage={false}\n            label=\"Usuario\"\n            source=\"userId\"\n            reference=\"api/v1/users\"\n            allowEmpty\n            alwaysOn\n        >\n            <SelectInput optionText=\"firstName\" />\n        </ReferenceInput>\n    </Filter>\n);\n\nconst StockList = (props: any) => {\n    return (\n        <List title=\"Stock\" filters={<Filters />} {...props} perPage={25} sort={{ field: 'id', order: 'DESC' }}>\n            <Datagrid>\n                <ReferenceField label=\"Foto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"product_id\">\n                    <FunctionField\n                        source='photoId'\n                        label=\"Foto\"\n                        sortable={false}\n                        render={(record: any) => {\n                            if (record.photoId !== null) {\n                                return (\n                                    <img src={`https://lh3.google.com/u/0/d/${record.photoId}=w80-h80`} alt={record.name} />\n                                );\n                            } else {\n                                return (\n                                    <p>Sin Foto</p>\n                                );\n                            }\n                        }}\n                    />\n                </ReferenceField>\n                <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"product_id\">\n                    <FunctionField\n                        label=\"Nombre\"\n                        render={(record: any) => `SKU ${record.id} - ${record.name}`}\n                    />\n                </ReferenceField>\n                <ReferenceField label=\"Usuario\" source=\"userId\" reference=\"api/v1/users\" sortBy=\"user_id\">\n                    <TextField source=\"firstName\" />\n                </ReferenceField>\n                <TextField sortable={false} source='t1' />\n                <TextField sortable={false} source='t2' />\n                <TextField sortable={false} source='t3' />\n                <TextField sortable={false} source='t4' />\n                <TextField sortable={false} source='t5' />\n                <TextField sortable={false} source='t6' />\n                <TextField sortable={false} source='t7' />\n                <TextField sortable={false} source='t8' />\n                <TextField sortable={false} source='t9' />\n                <TextField sortable={false} source='t10' />\n                <TextField sortable={false} source='t11' />\n                <TextField sortable={false} source='notes' label='Notes' />\n                <DateField source=\"dateCreated\" />\n\n                <EditButton basePath='stock' undoable={true} />\n                <DeleteButton basePath='stock' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default StockList","import { required } from 'react-admin';\nimport { Create, SimpleForm, TextInput, ReferenceInput, SelectInput } from 'react-admin'\n\nconst SaleCreate = (props: any) => {\n    const initialValues = () => ({ paymentMethodId: 6, priceId: 10 });\n    return (\n        <Create title='Nueva Venta' {...props}>\n            <SimpleForm initialValues={initialValues} redirect=\"edit\">\n                <TextInput source='notes' validate={required()} />\n\n                <ReferenceInput validate={required()} label=\"De Lugar de Venta / Vendedor\" source=\"sellerId\" reference=\"api/v1/users\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n\n                <ReferenceInput label=\"A Cliente\" source=\"clientId\" reference=\"api/v1/users\">\n                    <SelectInput optionText=\"firstName\" />\n                </ReferenceInput>\n\n                <ReferenceInput label=\"Método de Pago\" source=\"paymentMethodId\" reference=\"api/v1/options/type/paymentMethod\">\n                    <SelectInput optionText=\"name\" />\n                </ReferenceInput>\n\n                <ReferenceInput label=\"Precio\" source=\"priceId\" reference=\"api/v1/options/type/price\">\n                    <SelectInput optionText=\"name\" />\n                </ReferenceInput>\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default SaleCreate","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport { Button } from 'react-admin';\n\nconst AddProductsButton = ({ record }) => (\n    <Button\n        variant=\"raised\"\n        component={Link}\n        to={`/api/v1/saleproducts/create?saleId=${record.id}`}\n        label=\"Agregar Productos\"\n        title=\"Agregar Productos\">\n        <ChatBubbleIcon />\n    </Button>\n);\n\nexport default AddProductsButton;","import { required } from 'react-admin';\nimport {\n    Edit,\n    TextInput,\n    ReferenceInput,\n    SelectInput,\n    ReferenceManyField,\n    Datagrid,\n    TextField,\n    EditButton,\n    ReferenceField,\n    FunctionField,\n    TabbedForm,\n    FormTab\n} from 'react-admin'\nimport AddProductsButton from './AddProductsButton';\nimport { useQuery } from 'react-admin';\nimport { Loading, Error } from 'react-admin';\n\nconst Total = () => {\n    const { data, total, loading, error } = useQuery({\n        type: 'getList',\n        resource: 'api/v1/sales',\n        payload: { pagination: { page: 1, perPage: 25 }, sort: { field: 'id', order: 'DESC' } }\n    });\n\n    if (loading) return <Loading />;\n    if (error) return <Error />;\n    console.log(data)\n\n    if (!data || data.length === 0) return null;\n\n    const sum = data.map(sales => sales.total).reduce((a, b) => a + b)\n    console.log(sum)\n\n    return (\n        <ul>\n            <li>Total: {sum}</li>\n        </ul>\n    );\n};\n\nconst SaleEdit = (props: any) => {\n    return (\n        <Edit title='Editar Venta' {...props}>\n            <TabbedForm redirect=\"edit\">\n                <FormTab label=\"Summary\">\n                    <TextInput source='notes' validate={required()} />\n                    <ReferenceInput label=\"De Lugar de Venta / Vendedor\" source=\"sellerId\" reference=\"api/v1/users\">\n                        <SelectInput optionText=\"firstName\" />\n                    </ReferenceInput>\n\n                    <ReferenceInput label=\"A Cliente\" source=\"clientId\" reference=\"api/v1/users\">\n                        <SelectInput optionText=\"firstName\" />\n                    </ReferenceInput>\n\n                    <ReferenceInput label=\"Método de Pago\" source=\"paymentMethodId\" reference=\"api/v1/options/type/paymentMethod\">\n                        <SelectInput optionText=\"name\" />\n                    </ReferenceInput>\n\n                    <ReferenceInput label=\"Precio\" source=\"priceId\" reference=\"api/v1/options/type/price\">\n                        <SelectInput optionText=\"name\" />\n                    </ReferenceInput>\n                </FormTab>\n\n                <FormTab label=\"Productos\" path=\"products\">\n                    <ReferenceManyField\n                        addLabel={false}\n                        reference=\"api/v1/saleproducts\"\n                        target=\"saleId\"\n                        sort={{ field: 'id', order: 'DESC' }}  >\n                        <Datagrid>\n                            <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"name\">\n                                <FunctionField\n                                    label=\"Nombre\"\n                                    render={(record: any) => `SKU ${record.id} - ${record.name}`}\n                                />\n                            </ReferenceField>\n                            <TextField source='size' label='Talle' />\n                            <TextField source='quantity' label='Cantidad' />\n\n                            <TextField source='manufacturingCostTotal' label='$' />\n                            \n                            <TextField source='notes' label='Notas' />\n                            <EditButton />\n                        </Datagrid>\n                    </ReferenceManyField>\n                    <Total />\n                    <br />\n                    <AddProductsButton {...props} />\n                </FormTab>\n\n            </TabbedForm>\n        </Edit>\n    )\n}\n\nexport default SaleEdit\n","import React from 'react';\nimport { Loading, Error } from 'react-admin';\nimport { useQuery } from 'react-admin';\nimport { Datagrid, DeleteButton, EditButton, List, TextField, ReferenceField, DateField, FunctionField } from 'react-admin'\n\nconst Total = () => {\n    const { data, total, loading, error } = useQuery({\n        type: 'getList',\n        resource: 'api/v1/sales',\n        payload: { pagination: { page: 1, perPage: 25 }, sort: { field: 'id', order: 'DESC' } }\n    });\n\n    if (loading) return <Loading />;\n    if (error) return <Error />;\n    console.log(data)\n\n    if (!data || data.length === 0) return null;\n\n    const sum = data.map(sales => sales.total).reduce((a, b) => a + b)\n    console.log(sum)\n\n    return (\n        <ul>\n            <li>Total: {sum}</li>\n        </ul>\n    );\n};\n\nconst SaleList = (props: any) => {\n    return (\n        <div>\n            <List title=\"Sales\" {...props} perPage={25} sort={{ field: 'id', order: 'DESC' }}>\n                <Datagrid>\n                    <TextField source='notes' label='Notas' />\n\n                    <ReferenceField label=\"De Lugar de Venta / Vendedor\" source=\"sellerId\" reference=\"api/v1/users\" sortBy=\"firstName\">\n                        <TextField source=\"firstName\" />\n                    </ReferenceField>\n\n                    <ReferenceField label=\"A Cliente\" source=\"clientId\" reference=\"api/v1/users\" sortBy=\"firstName\">\n                        <TextField source=\"firstName\" />\n                    </ReferenceField>\n\n                    <ReferenceField label=\"Método de Pago\" source=\"paymentMethodId\" reference=\"api/v1/options/type/paymentMethod\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n\n                    <ReferenceField label=\"Precio\" source=\"priceId\" reference=\"api/v1/options/type/price\">\n                        <TextField source=\"name\" />\n                    </ReferenceField>\n\n                    <TextField source=\"total\" />\n                    <DateField source=\"dateCreated\" label='Fecha' />\n\n                    <EditButton basePath='sales' undoable={true} label='Editar / Agregar Productos' />\n                    <DeleteButton basePath='sales' undoable={true} label='Eliminar' />\n                </Datagrid>\n            </List>\n            <Total />\n        </div>\n\n    )\n}\n\n/*\n<FunctionField\n    source='manufacturingCostTotal'\n    label=\"$\"\n    render={(record: any) => {\n        if (record.priceId === 9) {\n            return `${Math.round(record.total * 1.7)}`\n        } else if (record.priceId === 10) {\n            return `${Math.round((record.total * 1.8) * 1.2)}`\n        } else if (record.priceId === 11) {\n            return `${Math.round((record.total * 1.8) * 2)}`\n        } else if (record.priceId === 12) {\n            return `${Math.round(((record.total * 1.8) * 2) + ((record.total * 1.8) * 2) * 0.12)}`\n        } else {\n            return `${0}`\n        }\n    }}\n/>\n*/\nexport default SaleList","import React from 'react'\nimport { Create, SimpleForm, TextInput, ReferenceInput, SelectInput, AutocompleteInput } from 'react-admin'\nimport { parse } from 'query-string';\nimport { required } from 'react-admin';\n\nconst productChoice = [\n    { id: 1, name: 'name' }\n];\nconst productRenderer = (productChoice: any) => `${productChoice.id} ${productChoice.name}`;\n\nconst SaleProductsCreate = (props: any) => {\n    const { saleId: saleId_string } = parse(props.location.search);\n    const saleId = saleId_string ? parseInt(saleId_string, 10) : '';\n    const redirect = saleId ? `/api/v1/sales/${saleId}/products` : 'list';\n    const initialValues = () => ({ saleId: saleId });\n\n    return (\n        <Create title='Nuevo SaleProduct' {...props}>\n            <SimpleForm initialValues={initialValues} redirect={redirect}>\n                <ReferenceInput validate={required()} perPage={false} label=\"Venta\" source=\"saleId\" reference=\"api/v1/sales\">\n                    <SelectInput optionText=\"notes\" />\n                </ReferenceInput>\n\n                <ReferenceInput validate={required()} perPage={false} label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <AutocompleteInput choices={productChoice} optionText={productRenderer} />\n                </ReferenceInput>\n\n                <TextInput validate={required()} source='size' label='Talle' />\n                <TextInput validate={required()} source='quantity' label='Cantidad' />\n                <TextInput source='customPrice' label='Otro Precio' />\n                <TextInput source='notes' label='Notas' />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default SaleProductsCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput, ReferenceInput, SelectInput, TextField } from 'react-admin'\nimport { parse } from 'query-string';\n\nconst productChoice = [\n    { id: 1, name: 'name', },\n    { id: 2, name: 'name' }\n];\nconst productRenderer = (productChoice: any) => `${productChoice.id} ${productChoice.name}`;\n\nconst optionChoice = [\n    { id: 1, type: 'type', name: 'name', },\n    { id: 2, type: 'type', name: 'name' }\n];\nconst optionRenderer = (optionChoice: any) => `${optionChoice.name} - ${optionChoice.type}`;\n\nconst SaleProductsEdit = (props: any) => {\n    const { saleId: saleId_string } = parse(props.location.search);\n    const saleId = saleId_string ? parseInt(saleId_string, 10) : '';\n    const redirect = saleId ? `/api/v1/sales/${saleId}/products` : 'list';\n\n    return (\n        <Edit title='Nuevo SaleProduct' {...props}>\n            <SimpleForm initialValues={{ saleId }} redirect={redirect}>\n                <ReferenceInput perPage={false} label=\"Venta\" source=\"saleId\" reference=\"api/v1/sales\">\n                    <SelectInput optionText=\"notes\" />\n                </ReferenceInput>\n\n                <ReferenceInput perPage={false} label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <SelectInput choices={productChoice} optionText={productRenderer} />\n                </ReferenceInput>\n\n                <TextInput source='size' label='Talle' />\n                <TextInput source='quantity' label='Cantidad' />\n                <TextInput source='customPrice' label='Otro Precio' />\n                <TextInput source='notes' label='Notas' />\n            </SimpleForm>\n        </Edit >\n    )\n}\n\nexport default SaleProductsEdit","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField, DateField, ReferenceField, FunctionField } from 'react-admin'\n\nconst SaleProductsList = (props: any) => {\n    return (\n        <List title=\"SalesProducts\" {...props} perPage={25}>\n            <Datagrid>\n                <ReferenceField label=\"Foto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"product_id\">\n                    <FunctionField\n                        source='photoId'\n                        label=\"Foto\"\n                        sortable={false}\n                        render={(record: any) => {\n                            if (record.photoId !== null) {\n                                return (\n                                    <img src={`https://lh3.google.com/u/0/d/${record.photoId}=w80-h80`} alt={record.name} />\n                                );\n                            } else {\n                                return (\n                                    <p>Sin Foto</p>\n                                );\n                            }\n                        }}\n                    />\n                </ReferenceField>\n\n                <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\">\n                    <FunctionField\n                        label=\"Nombre\"\n                        render={(record: any) => `SKU ${record.id} - ${record.name}`}\n                    />\n                </ReferenceField>\n\n                <ReferenceField label=\"Venta\" source=\"saleId\" reference=\"api/v1/sales\">\n                    <TextField source='notes' />\n                </ReferenceField>\n\n                <TextField source='size' label='Talle' />\n                <TextField source='quantity' label='Cantidad' />\n\n                <TextField source='manufacturingCostTotal' label='$' />\n\n                <TextField source='notes' label='Notas' />\n\n                <EditButton basePath='saleproducts' undoable={true} />\n                <DeleteButton basePath='saleproducts' undoable={true} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default SaleProductsList","import React from 'react'\nimport { Create, SimpleForm, TextInput, AutocompleteInput } from 'react-admin'\n\nconst OptionCreate = (props: any) => {\n    return (\n        <Create title='Nueva Opción' {...props}>\n            <SimpleForm redirect=\"list\">\n                <TextInput source='name' label='Nombre' autoFocus />\n                <AutocompleteInput source=\"type\" label='Tipo' choices={[\n                    { id: 'rol', name: 'ROL' },\n                    { id: 'paymentMethod', name: 'METODO DE PAGO' },\n                    { id: 'price', name: 'PRECIO' }\n                ]} />\n            </SimpleForm>\n        </Create>\n    )\n}\n\nexport default OptionCreate","import React from 'react'\nimport { Edit, SimpleForm, TextInput, AutocompleteInput } from 'react-admin'\n\nconst OptionEdit = (props: any) => {\n    return (\n        <Edit title='Editar Opción' {...props}>\n            <SimpleForm>\n                <TextInput source='name' label='Nombre' autoFocus />\n                <AutocompleteInput source=\"type\" label='Tipo' choices={[\n                    { id: 'rol', name: 'ROL' },\n                    { id: 'paymentMethod', name: 'METODO DE PAGO' },\n                    { id: 'price', name: 'PRECIO' }\n                ]} />\n            </SimpleForm>\n        </Edit>\n    )\n}\n\nexport default OptionEdit\n","import React from 'react'\nimport { Datagrid, DeleteButton, EditButton, List, TextField } from 'react-admin'\n\nconst OptionList = (props: any) => {\n    return (\n        <List title=\"Opciones\" {...props} perPage={25} pagination={false}>\n            <Datagrid>\n                <TextField source='name' label='Nombre' />\n                <TextField source='type' label='Tipo' />\n                <EditButton basePath='options' undoable={false} />\n                <DeleteButton basePath='options' undoable={false} />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default OptionList","import React from 'react'\nimport { Datagrid, List, TextField, ReferenceField, FunctionField } from 'react-admin'\n\nconst ReportList = (props: any) => {\n    return (\n        <List title=\"Disponibilidad de Productos\" {...props} perPage={25}>\n            <Datagrid>\n                <ReferenceField label=\"Producto\" source=\"productId\" reference=\"api/v1/products\" sortBy=\"name\">\n                    <FunctionField\n                        label=\"Nombre\"\n                        render={(record: any) => `SKU ${record.id} - ${record.name}`}\n                    />\n                </ReferenceField>\n                <TextField source='t1' />\n                <TextField source='t2' />\n                <TextField source='t3' />\n                <TextField source='t4' />\n                <TextField source='t5' />\n                <TextField source='t6' />\n                <TextField source='t7' />\n                <TextField source='t8' />\n                <TextField source='t9' />\n                <TextField source='t10' />\n                <TextField source='t11' />\n            </Datagrid>\n        </List>\n    )\n}\n\nexport default ReportList","import './App.css';\nimport React from 'react'\nimport { Admin, fetchUtils, Resource } from 'react-admin'\nimport simpleRestProvider from 'ra-data-simple-rest';\nimport CatCreate from './components/category/CatCreate';\nimport CatList from './components/category/CatList';\nimport CatEdit from './components/category/CatEdit';\nimport ProdCreate from './components/product/ProdCreate';\nimport ProdList from './components/product/ProdList';\nimport ProdEdit from './components/product/ProdEdit';\nimport UserCreate from './components/user/UserCreate';\nimport UserList from './components/user/UserList';\nimport UserEdit from './components/user/UserEdit';\nimport ColorList from './components/color/ColorList';\nimport ColorCreate from './components/color/ColorCreate';\nimport ColorEdit from './components/color/ColorEdit';\nimport PriceCreate from './components/price/PriceCreate';\nimport PriceEdit from './components/price/PriceEdit';\nimport PriceList from './components/price/PriceList';\nimport StockCreate from './components/stock/StockCreate';\nimport StockEdit from './components/stock/StockEdit';\nimport StockList from './components/stock/StockList';\nimport SaleCreate from './components/sale/SaleCreate';\nimport SaleEdit from './components/sale/SaleEdit';\nimport SaleList from './components/sale/SaleList';\nimport SaleProductsCreate from './components/saleproducts/SaleProductsCreate';\nimport SaleProductsEdit from './components/saleproducts/SaleProductsEdit';\nimport SaleProductsList from './components/saleproducts/SaleProductsList';\nimport OptionCreate from './components/option/OptionCreate';\nimport OptionEdit from './components/option/OptionEdit';\nimport OptionList from './components/option/OptionList';\nimport ReportList from './components/report/ReportList';\nimport Dash from './Dash';\n\nfunction App() {\n    let apiUrl = process.env.NODE_ENV === 'development' ? process.env.REACT_APP_API_URL_DEV : process.env.REACT_APP_API_URL_PROD;\n    if (apiUrl === undefined)\n        apiUrl = 'REACT_APP_API_URL undefined'\n    console.log(apiUrl);\n    return (\n        <Admin dataProvider={simpleRestProvider(apiUrl, fetchUtils.fetchJson, 'X-Total-Count')}>\n            <Resource\n                name='api/v1/products'\n                options={{ label: 'Productos' }}\n                list={ProdList}\n                create={ProdCreate}\n                edit={ProdEdit}\n            />\n            <Resource\n                name='api/v1/stock'\n                options={{ label: 'Stock' }}\n                list={StockList}\n                create={StockCreate}\n                edit={StockEdit}\n            />\n            <Resource\n                name='api/v1/sales'\n                options={{ label: 'Ventas' }}\n                list={SaleList}\n                create={SaleCreate}\n                edit={SaleEdit}\n            />\n            <Resource\n                name='api/v1/users'\n                options={{ label: 'Usuarios' }}\n                list={UserList}\n                create={UserCreate}\n                edit={UserEdit}\n            />\n            <Resource\n                name='api/v1/categories'\n                options={{ label: 'Categorías' }}\n                list={CatList}\n                create={CatCreate}\n                edit={CatEdit}\n            />\n            <Resource\n                name='api/v1/colors'\n                options={{ label: 'Colores' }}\n                list={ColorList}\n                create={ColorCreate}\n                edit={ColorEdit}\n            />\n            <Resource\n                name='api/v1/prices'\n                options={{ label: 'Precios' }}\n                list={PriceList}\n                create={PriceCreate}\n                edit={PriceEdit}\n            />\n            <Resource\n                name='api/v1/saleproducts'\n                options={{ label: 'SaleProducts' }}\n                list={SaleProductsList}\n                create={SaleProductsCreate}\n                edit={SaleProductsEdit}\n            />\n            <Resource\n                name='api/v1/options'\n                options={{ label: 'Opciones' }}\n                list={OptionList}\n                create={OptionCreate}\n                edit={OptionEdit}\n            />\n            <Resource\n                name='api/v1/report'\n                options={{ label: 'Reporte' }}\n                list={ReportList}\n            />\n            <Resource name='api/v1/options/type/paymentMethod' />\n            <Resource name='api/v1/options/type/price' />\n            <Resource name='api/v1/options/type/rol' />\n        </Admin>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}